/*
// Gebruiker Centraal - widget-giant-banner.less
// ----------------------------------------------------------------------------------
// Extra CSS-file for pages with a giant banner
// ----------------------------------------------------------------------------------
// @package gebruiker-centraal
// @author  Paul van Buuren
// @license GPL-2.0+
// @version 4.1.6
// @desc.   Separate CSS files restored. Login form slightly retouched.
// @link    https://github.com/ICTU/gebruiker-centraal-wordpress-theme
*/
/*
 * Abstracts
 * Variables, mixins, extendables - things we use everywhere
 */
/* Typografie */
/* Default variables for textblocks */
/* Chart */
/* Nav */
.banner-widget {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  -webkit-box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.1);
          box-shadow: 4px 4px 0 rgba(0, 0, 0, 0.1);
  margin-bottom: 4rem;
  color: #fff;
}
.banner-widget.no-image {
  background: #148839;
  padding-bottom: 4rem;
}
.banner-widget.no-image p {
  padding-left: 4rem;
  padding-right: 4rem;
}
.banner-widget.no-image .widget-title {
  background: #055C21;
  color: #fff;
  padding: 2rem 4rem;
}
.banner-widget.right {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse;
}
.banner-widget .widget-title {
  font-family: 'League Gothic', Impact, Helvetica, Arial, sans-serif;
  font-size: 44px;
  font-size: 4.4rem;
  line-height: 48px;
  text-transform: uppercase;
}
.banner-widget p {
  margin: 0;
}
.banner-widget p + p {
  margin-top: 2rem;
}
.banner-widget.fullwidth {
  padding: 4rem 6rem;
}
.banner-widget.fullwidth .banner-widget_text {
  padding: 2rem;
  background: #000;
  background: rgba(8, 8, 8, 0.7);
  color: #fff;
}
.banner-widget.left,
.banner-widget.right {
  background: #148839;
}
.banner-widget.left .banner-widget_image,
.banner-widget.right .banner-widget_image {
  -webkit-box-flex: 1;
      -ms-flex: 1 0 34%;
          flex: 1 0 34%;
  background-position: center center;
  background-size: cover;
  background-repeat: no-repeat;
}
.banner-widget.left .banner-widget_text,
.banner-widget.right .banner-widget_text {
  -webkit-box-flex: 2;
      -ms-flex: 2 0 66%;
          flex: 2 0 66%;
  padding-bottom: 4rem;
}
.banner-widget.left .banner-widget_text p,
.banner-widget.right .banner-widget_text p {
  padding-left: 4rem;
  padding-right: 4rem;
}
.banner-widget.left .banner-widget_text .widget-title,
.banner-widget.right .banner-widget_text .widget-title {
  background: #055C21;
  color: #fff;
  padding: 2rem 4rem;
}
.banner-widget a.cta {
  background-color: #fff;
  display: table-cell;
  overflow: hidden;
  vertical-align: middle;
  position: relative;
  border: 0 solid transparent;
  -webkit-box-shadow: 3px 3px 0px rgba(0, 0, 0, 0.2);
          box-shadow: 3px 3px 0px rgba(0, 0, 0, 0.2);
  font-family: 'League Gothic', Impact, Helvetica, Arial, sans-serif;
  font-size: 24px;
  font-size: 2.4rem;
  font-weight: normal;
  color: #00303d;
  text-decoration: none;
  padding-left: 0.75em;
  padding-right: 2em;
  float: none;
}
@media only screen and (max-width: 650px) {
  .banner-widget a.cta {
    font-size: 19.2px;
    font-size: 1.92rem;
  }
}
@media only screen and (min-width: 651px) {
  .banner-widget a.cta {
    line-height: 2;
    font-size: 24px;
    font-size: 2.4rem;
  }
}
.banner-widget a.cta:after {
  position: absolute;
  right: 0;
  top: 0;
  content: ' ';
  width: 1.25em;
  height: 100%;
  display: block;
  float: right;
  background: #f2ebe4 url('../images/arrow-wit.svg') no-repeat center center;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20height%3D%2242%22%20viewBox%3D%220%200%2028%2042%22%20width%3D%2228%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22m12.014785%2016-.014785.0132201v2.5053476l2.4767983%202.9034654-2.4767983%202.9036032v2.5052099l.014785.0132201%204.9851688-5.4220332z%22%20fill%3D%22%2300303d%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E");
}
.banner-widget a.cta:hover,
.banner-widget a.cta:focus,
.banner-widget a.cta:active {
  text-decoration: underline;
  border-color: #00303d;
  color: #00303d;
  background-color: #f2ebe4;
}
.banner-widget a.cta:hover:after,
.banner-widget a.cta:focus:after,
.banner-widget a.cta:active:after {
  background-color: #e8d8c7;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20height%3D%2242%22%20viewBox%3D%220%200%2028%2042%22%20width%3D%2228%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22m12.014785%2016-.014785.0132201v2.5053476l2.4767983%202.9034654-2.4767983%202.9036032v2.5052099l.014785.0132201%204.9851688-5.4220332z%22%20fill%3D%22%2300303d%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E");
}
@media only screen {
  .banner-widget a.cta {
    text-transform: uppercase;
  }
}
.page-template-page_sitemap .banner-widget,
.page-template-page_contentpagina .banner-widget,
.page-template-default .banner-widget {
  margin-top: 4rem;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
